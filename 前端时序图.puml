@startuml 前端交互流程

!theme plain
skinparam backgroundColor white
skinparam sequenceMessageAlign center

actor "用户" as user
participant "Vue组件" as component
participant "Axios拦截器" as interceptor
participant "Axios" as axios
participant "LocalStorage" as storage
participant "Router守卫" as guard
participant "后端API" as api

== 页面初始化流程 ==
user -> component: 访问页面
activate component
component -> guard: 路由跳转
activate guard
guard -> storage: 检查登录状态
storage --> guard: 返回用户信息

alt 需要登录认证
    alt 已登录
        guard --> component: 允许访问
    else 未登录
        guard -> component: 重定向到登录页
        component --> user: 显示登录页
    end
end
deactivate guard

== 登录流程 ==
user -> component: 输入登录信息
component -> axios: 发起登录请求
activate axios
axios -> interceptor: 请求拦截
activate interceptor
interceptor -> interceptor: 添加请求头
interceptor --> axios: 继续请求
deactivate interceptor

axios -> api: POST /api/login
api --> axios: 返回响应

axios -> interceptor: 响应拦截
activate interceptor
interceptor -> interceptor: 检查响应状态
alt 登录成功
    interceptor -> storage: 保存用户信息
    interceptor --> axios: 继续响应
else 登录失败
    interceptor --> axios: 返回错误
end
deactivate interceptor

axios --> component: 返回结果
deactivate axios

alt 登录成功
    component -> guard: 导航到首页
    component --> user: 显示成功提示
else 登录失败
    component --> user: 显示错误信息
end

== API请求流程 ==
user -> component: 触发数据请求
activate component
component -> axios: 发起API请求
activate axios

axios -> interceptor: 请求拦截
activate interceptor
interceptor -> storage: 获取用户信息
storage --> interceptor: 返回用户信息
interceptor -> interceptor: 添加用户信息到请求头
interceptor --> axios: 继续请求
deactivate interceptor

axios -> api: 发送请求
api --> axios: 返回响应

axios -> interceptor: 响应拦截
activate interceptor
alt 响应成功
    interceptor --> axios: 继续响应
else 响应失败
    alt 401未授权
        interceptor -> storage: 清除用户信息
        interceptor -> guard: 重定向到登录页
    else 其他错误
        interceptor -> interceptor: 处理错误信息
    end
end
deactivate interceptor

axios --> component: 返回结果
deactivate axios

alt 请求成功
    component -> component: 更新页面数据
    component --> user: 显示数据
else 请求失败
    component --> user: 显示错误提示
end
deactivate component

== 登出流程 ==
user -> component: 点击登出
activate component
component -> storage: 清除用户信息
component -> guard: 导航到登录页
guard -> component: 重定向完成
component --> user: 显示登出成功
deactivate component

@enduml 